version: 2.1
executors:
  docker-publisher:
    environment:
      ACR_NAME: $ACR_NAME
      CLIENT_IMAGE_NAME: $ACR_NAME/sterilization-directory-client-fixed
      SERVER_IMAGE_NAME: $ACR_NAME/sterilization-directory-server
    docker:
      - image: cimg/base:2021.04

jobs:
  build-and-test:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: echo "export ACR_NAME=$ACR_NAME" >> $BASH_ENV
      - run:
          name: Build images of services declared in docker-compose.yml
          command: |
            cd server && docker build -t $ACR_NAME/sterilization-directory-server:latest . && cd .. && cd client && docker build -t $ACR_NAME/sterilization-directory-client-fixed:latest .
      - run:
          name: Run tests on server image
          command: |
          source $BASH_ENV  # Source the environment variables
           cd server && docker run $SERVER_IMAGE_NAME:latest npm run test
      - run:
          name: Run tests on client image
          command: |
            source $BASH_ENV  # Source the environment variables
            cd client && docker run $CLIENT_IMAGE_NAME:latest npm run test

      - run:
          name: Check docker images
          command: |
            docker images
      - run:
          name: Archive docker images
          command: |
            docker save -o server-image.tar $SERVER_IMAGE_NAME
            docker save -o client-image.tar $CLIENT_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./server-image.tar
            - ./client-image.tar

  publish-latest:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: echo "export ACR_NAME=$ACR_NAME" >> $BASH_ENV
      - run:
          name: Load archived Docker image
          command: |
            docker load -i /tmp/workspace/client-image.tar
            docker load -i /tmp/workspace/server-image.tar
      - run:
          name: Push Docker Images to Azure Container Registry
          command: |
            source $BASH_ENV  # Source the environment variables
            docker login $ACR_NAME -u $ACR_USERNAME -p $ACR_PASSWORD --tenant $AZURE_TENANT_ID
            # ... rest of your push steps ...

workflows:
  build-master:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: testing
      - publish-latest:
          requires:
            - build-and-test
          filters:
            branches:
              only: testing
